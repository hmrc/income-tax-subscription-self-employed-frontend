import uk.gov.hmrc.sbtdistributables.SbtDistributablesPlugin.publishingSettings

import scala.sys.process._

val appName = "income-tax-subscription-self-employed-frontend"

lazy val microservice = Project(AppDependencies.appName, file("."))
  .settings(scalaVersion := "2.13.8")
  // silence all warnings on autogenerated files
  .settings(
    scalacOptions += "-Wconf:src=routes/.*:s",
    scalacOptions += "-Wconf:cat=unused-imports&src=html/.*:s",
    scalacOptions ++= Seq("-deprecation", "-feature"),
  )
  .enablePlugins(play.sbt.PlayScala, SbtDistributablesPlugin)
  .disablePlugins(JUnitXmlReportPlugin)
  .settings(
    majorVersion := 0,
    libraryDependencies ++= (AppDependencies.compile ++ AppDependencies.test)
  )
  .settings(publishingSettings: _*)
  .configs(IntegrationTest)
  .settings(
    IntegrationTest / Keys.fork := false,
    Defaults.itSettings,
    IntegrationTest / unmanagedSourceDirectories += baseDirectory(_ / "it").value,
    IntegrationTest / parallelExecution := false
  )
  .settings(resolvers += Resolver.jcenterRepo)
  .settings(CodeCoverageSettings.settings: _*)

TwirlKeys.templateImports ++= Seq(
  "uk.gov.hmrc.govukfrontend.views.html.components._",
  "uk.gov.hmrc.hmrcfrontend.views.html.components._",
  "uk.gov.hmrc.hmrcfrontend.views.html.helpers._",
  "uk.gov.hmrc.govukfrontend.views.html.components.implicits._"
)

lazy val results = taskKey[Unit]("Opens test results'")
results := {
  "open target/test-reports/html-report/index.html" !
}
Test / results := (results).value

lazy val itResults = taskKey[Unit]("Opens it test results'")
itResults := {
  "open target/int-test-reports/html-report/index.html" !
}
IntegrationTest / results := (itResults).value
